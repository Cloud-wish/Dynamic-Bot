[bot]
client_name = test # 用于连接Crawler
bot_id = # Bot账号在cqhttp中的user_id

[cqhttp]
ws_reverse_host = # 反向Websocket连接的host
ws_reverse_port = # 反向Websocket连接的port
http_url = # HTTP API的url
# 以下配置为可选项
ws_relay_enable = false # 是否开启Websocket消息转发（把从cqhttp收到的消息转发出去）
ws_relay_url = # Websocket消息转发接收端的url
ws_relay_reconnect_count = # 转发失败时的最多重连次数

[crawler]
ws_url = ws://localhost:37773
http_url = http://localhost:27773

[logger]
debug = false

[sender]
debug = false # 是否开启debug模式（不实际发送消息，只记录）
python_exec_command = python # 使用什么指令运行Python，一般为python3或python

[builder]
weibo_pic_save = false # 是否保存微博中的图片到本地（如果不显示图片，打开此项）
weibo_avatar_save = false  # 是否保存微博用户头像到本地（如果不显示头像，打开此项）
pic_enable = true # 是否开启微博/动态内容生成图片
pic_save_path = pics # 图片保存路径
bili_dyn_new_style = true # 是否默认使用新版B站网页动态进行B站动态图片生成（差别不大，并且访问时B站会随机跳转新/旧版，本设置不一定有效）
weibo_pics_limit = 5 # 图片数量>=下限时，微博消息生成图片发送
bili_dyn_pics_limit = 5 # 图片数量>=下限时，B站动态消息生成图片发送
weibo_ua = # 生成微博图片所使用的UA，最好和Crawler相同
weibo_cookie = # 生成微博图片所使用的Cookie，最好和Crawler相同